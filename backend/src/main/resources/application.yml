# JWT Configuration
application:
  security:
    jwt:
      secret-key: ${JWT_SECRET:your-default-secret-key-should-be-at-least-256-bits}
      expiration: 3600000  # 1 hour in milliseconds
      refresh-token:
        expiration: 604800000  # 7 days in milliseconds
    token-blacklist: in-memory

# Redis Configuration (for distributed token blacklist and rate limiting)
#spring:
#  redis:
#    host: ${REDIS_HOST:localhost}
#    port: ${REDIS_PORT:6379}
#    password: ${REDIS_PASSWORD:}
#    
#  # Session Configuration
#  session:
#    store-type: redis
#    redis:
#      namespace: xml-processor:session
#    timeout: 1800  # 30 minutes

# Security Configuration
security:
  csrf:
    enabled: true
    cookie-name: XSRF-TOKEN
    header-name: X-XSRF-TOKEN
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: Authorization,Content-Type,X-XSRF-TOKEN
    allow-credentials: true
    
# Logging Configuration
logging:
  level:
    com.xml.processor: INFO
    com.xml.processor.security: DEBUG
    org.springframework.security: INFO 

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when_authorized
      roles: ADMIN
  health:
    defaults:
      enabled: true 